{"version":3,"sources":["redux/contacts/contacts-selectors.js","Components/PhonebookForm/PhonebookForm.jsx","redux/contacts/contact-operations.js","Components/ContactList/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Views/ContactsView.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","toLocaleLowerCase","PhonebookForm","useState","number","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","alert","handleUniq","className","st","form","onSubmit","e","preventDefault","fetchAddContactRequest","axios","post","then","data","fetchAddContactSuccess","catch","error","fetchAddContactError","message","addContact","title","input","type","value","onChange","target","button","useStyles","createUseStyles","listItem","width","display","alignItems","padding","background","marginRight","fontWeight","backgroundColor","boxShadow","borderRadius","cursor","ContactItem","classes","onClick","id","a","fetchDeleteContactRequest","delete","fetchDeleteContactSuccess","fetchDeleteContactError","list","margin","ContactList","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","map","flexDirection","marginBottom","Filter","changeFilter","ContactsView"],"mappings":"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","file":"static/js/6.be7f007a.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    ),\r\n);\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n//   );\r\n// };\r\n","import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport st from './PhonebookForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contact-operations';\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact(name, number));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please Ðµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  return (\r\n    <form className={st.form} onSubmit={handleSubmit}>\r\n      <label className={st.title}>\r\n        Name\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={st.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// PhonebookForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n//   onCheckUniq: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default PhonebookForm;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchAddContactError,\r\n  fetchAddContactSuccess,\r\n  fetchAddContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactRequest,\r\n  fetchDeleteContactSuccess,\r\n  fetchDeleteContactError,\r\n} from './contact-actions';\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(fetchAddContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(fetchAddContactSuccess(data)))\r\n    .catch(error => dispatch(fetchAddContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(fetchDeleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(fetchDeleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactError(error.message));\r\n  }\r\n};\r\n","import { createUseStyles } from 'react-jss';\r\nimport {  useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/contacts/contact-operations';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    background: 'linear-gradient(to left, #f8ab8d 0%, white, #f8ab8d)',\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: 'rgb(184, 92, 80)',\r\n    boxShadow: '0px 0px 3px 0px black',\r\n    borderRadius: 5,\r\n    cursor: 'pointer',\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={classes.listItem}>\r\n      <p className={classes.name}>{contact.name}</p>\r\n      <p className={classes.number}>{contact.number}</p>\r\n      <button className={classes.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem';\r\n// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from '../../redux/contacts/contact-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {contacts.map(contact => (\r\n        <ContactItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   onDelete: PropTypes.func.isRequired,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//   ).isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contact-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 200,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nconst Filter = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <label className={classes.title}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string,\r\n// };\r\n\r\nexport default Filter;\r\n","import PhonebookForm from '../Components/PhonebookForm';\r\nimport ContactList from '../Components/ContactList';\r\nimport Filter from '../Components/Filter';\r\n// import s from 'app.module.css';\r\n\r\nconst ContactsView = () =>{\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsView;"],"sourceRoot":""}